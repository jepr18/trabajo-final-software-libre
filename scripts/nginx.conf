# Configuración de NGINX para UAPA Smartphones API
# Proyecto Final - Software Libre
#
# Ubicación: /etc/nginx/sites-available/uapa-smartphones
# 
# Para habilitar:
#   sudo ln -s /etc/nginx/sites-available/uapa-smartphones /etc/nginx/sites-enabled/
#   sudo nginx -t
#   sudo systemctl reload nginx

server {
    # Puerto de escucha
    listen 80;
    listen [::]:80;

    # Nombre del servidor (cambiar por tu dominio)
    server_name localhost _;

    # Límites de tamaño de peticiones
    client_max_body_size 10M;

    # Logs
    access_log /var/log/nginx/uapa-smartphones-access.log;
    error_log /var/log/nginx/uapa-smartphones-error.log;

    # Archivos estáticos (si se sirven desde NGINX)
    location /css {
        alias /var/www/uapa-smartphones/src/public/css;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    location /js {
        alias /var/www/uapa-smartphones/src/public/js;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Proxy a la aplicación Node.js
    location / {
        # Proxy pass a Node.js
        proxy_pass http://localhost:3000;
        
        # Headers de proxy
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        
        # Headers de cliente real
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        
        # Timeouts
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # API específicamente (opcional, para configuraciones especiales)
    location /api {
        proxy_pass http://localhost:3000/api;
        
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Timeouts más largos para operaciones de base de datos
        proxy_connect_timeout 120s;
        proxy_send_timeout 120s;
        proxy_read_timeout 120s;
    }

    # Deshabilitar logs para favicon
    location = /favicon.ico {
        access_log off;
        log_not_found off;
    }

    # Deshabilitar logs para robots.txt
    location = /robots.txt {
        access_log off;
        log_not_found off;
    }

    # Seguridad: Ocultar versión de NGINX
    server_tokens off;

    # Seguridad: Headers adicionales
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
}

# Configuración para HTTPS (descomentar cuando tengas certificado SSL)
#server {
#    listen 443 ssl http2;
#    listen [::]:443 ssl http2;
#    
#    server_name tu-dominio.com;
#    
#    # Certificados SSL
#    ssl_certificate /etc/letsencrypt/live/tu-dominio.com/fullchain.pem;
#    ssl_certificate_key /etc/letsencrypt/live/tu-dominio.com/privkey.pem;
#    
#    # Configuración SSL
#    ssl_protocols TLSv1.2 TLSv1.3;
#    ssl_ciphers HIGH:!aNULL:!MD5;
#    ssl_prefer_server_ciphers on;
#    
#    # ... resto de la configuración igual que arriba ...
#}

# Redirección HTTP a HTTPS (descomentar cuando tengas HTTPS)
#server {
#    listen 80;
#    listen [::]:80;
#    server_name tu-dominio.com;
#    return 301 https://$server_name$request_uri;
#}

